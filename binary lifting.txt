#include<bits/stdc++.h>
#define pb push_back
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define SORT(v) sort(all(v))
#define int long long
#define ff first
#define ss second
#define mod 1000000007
#define endl "\n"

using namespace std;

void oj()
{
  ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
  #ifndef ONLINE_JUDGE  
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  #endif
}

int n;
vector<int>v[200005];
int parent[100005], level[100005];
int lca[100005][20];
map<pair<int,int>, int >mp;
void dfs(int x, int par, int l)
{
  parent[x] = par;
  lca[x][0] = par;
  level[x] = l;

  for(auto el : v[x])
  {
    if(el != par)
      dfs(el, x, l + 1);
  }
}
void doit()
{
  for(int j = 1; j <= log2(n); j++)
  {
    for(int i = 1; i <= n; i++)
    {
      int mid = lca[i][j - 1];
      if(mid != -1)
        lca[i][j] = lca[mid][j - 1]; 
    }
  }
}
int find (int a, int b)
{
  if(level[a] > level[b])
    swap(a, b);

  int maxi = -1, mini = INT_MAX;
  int d = level[b] - level[a];
  while(d > 0)
  {
    int i = log2(d);
    b = lca[b][i];
    d -= (1<<i);
  }
  if(a == b)
    return a;

  for(int i = log2(n); i>= 0; i--)
  {
    if(lca[a][i] != -1 && lca[a][i] != lca[b][i])
    {
      a = lca[a][i];
      b = lca[b][i];
    }
  }
  return parent[a];
}
void solve()
{
  int n; cin>>n;
  for(int i = 0; i < n - 1; i++)
  {
    int x, y, z; cin>>x>>y>>z;
    v[x].pb(y);
    v[y].pb(x);

    mp[{x, y}] = z;
    mp[{y, x}] = z;
  }
  memset(lca, -1, sizeof lca);
  dfs(1, -1, 0);
  doit();
  int x; cin>>x;
  while(x --)
  {
    int a, b; cin>>a>>b;
    cout<<find(a, b)<<endl;
  }
}
signed main()
{
  oj();
  // int t; cin>>t;
  // while(t--)
    solve();

  return 0;
}
